version: '3.8'

services:
  nnplanner-app:
    build:
      context: .
    environment:
      - LOCAL_DB_URL=${LOCAL_DB_URL}
      - LOCAL_DB_USER=${LOCAL_DB_USER}
      - LOCAL_DB_PASSWORD=${LOCAL_DB_PASSWORD}
      - LOCAL_MONGODB_URL=${LOCAL_MONGODB_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - GOOGLE_EMAIL=${GOOGLE_EMAIL}
      - GOOGLE_PASSWORD=${GOOGLE_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - FOOD_API_KEY=${FOOD_API_KEY}
      - SCHOOL_API_KEY=${SCHOOL_API_KEY}
      - SPRING_PROFILES_ACTIVE=prod  # Spring profile을 명시적으로 설정
    ports:
      - "8080:8080"
    depends_on:
      - nnplanner-db
      - mongodb-service
      - nnplanner-redis
    networks:
      - nnplanner-network

  nnplanner-db:
    image: postgres:16
    environment:
      POSTGRES_DB: nnplanner
      POSTGRES_USER: ${LOCAL_DB_USER}
      POSTGRES_PASSWORD: ${LOCAL_DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${LOCAL_DB_USER}" ]
      interval: 10s
      retries: 5
    networks:
      - nnplanner-network

  mongodb-service:
    image: mongo:8.0
    ports:
      - "27017:27017"
    healthcheck:
      test: [ "CMD-SHELL", "mongo --eval 'db.runCommand({ ping: 1 })'" ]
      interval: 10s
      retries: 5
    networks:
      - nnplanner-network

  nnplanner-redis:
    image: redis:7.4
    container_name: nnplanner-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      retries: 5
    networks:
      - nnplanner-network

networks:
  nnplanner-network:
    driver: bridge