spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USER}
    password: ${LOCAL_DB_PASSWORD}

  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        show_sql: true
    open-in-view: false

  data:
    mongodb:
      uri: ${LOCAL_MONGODB_URL}

    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GOOGLE_EMAIL}
    password: ${GOOGLE_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_PASSWORD}
            scope:
              - email
              - profile

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

api:
  school:
    key: ${SCHOOL_API_KEY}
  food:
    key: ${FOOD_API_KEY}
  oauth:
    key: ${OAUTH_URL}

logging:
  level:
    org.springframework.security: DEBUG
    root: INFO

cors:
  allowed-origins: ${URL_SERVER}