spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USER}
    password: ${LOCAL_DB_PASSWORD}

  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: true

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        show_sql: true
    open-in-view: false

  data:
    mongodb:
      uri: ${LOCAL_MONGODB_URL}

    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GOOGLE_EMAIL}
    password: ${GOOGLE_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

api:
  school:
    key: ${SCHOOL_API_KEY}
  food:
    key: ${FOOD_API_KEY}

management:
  endpoints:
    web:
      exposure:
        include: health, info  # 노출할 엔드포인트 목록
  endpoint:
    health:
      show-details: always  # 헬스체크의 상세 정보를 항상 표시
  health:
    redis:
      enabled: true  # Redis 헬스체크 활성화
    db:
      enabled: true  # 데이터베이스 헬스체크 활성화